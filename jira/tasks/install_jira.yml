---

- name: Jira groups
  group: name={{ jira_user_group }} gid={{ jira_user_group_gid }}

- name: Default JIRA user and home
  user: name={{ jira_user }} shell=/bin/bash group={{ jira_user_group }} uid={{ jira_user_uid }} home={{ jira_user_home_dir }}

- name: Download the Source
  get_url: url={{ jira_download_link }}-{{ jira_version }}.tar.gz sha256sum={{ jira_version_file_sha256sum }} dest={{ jira_user_home_dir }}/atlassian-jira-{{ jira_version }}.tar.gz 

- stat: path={{ jira_user_home_dir }}/atlassian-jira-{{ jira_version }}-standalone
  register: st

- name: Extract the sources
  unarchive: src={{ jira_user_home_dir }}/atlassian-jira-{{ jira_version }}.tar.gz dest={{ jira_user_home_dir }} copy=no
  when: not st.stat.exists

- name: Make the directory easier to reach
  file: src={{ jira_user_home_dir }}/atlassian-jira-{{ jira_version }}-standalone dest={{ jira_user_home_dir }}/current owner={{ jira_user }} group={{ jira_user_group }} state=link

- name: Create jira-home dir
  file: path={{ jira_home }} state=directory owner={{ jira_user }} group={{ jira_user_group }} 

- name: Set the home dir inside the configs
  template: src=jira-application.properties.j2 dest={{ jira_user_home_dir }}/current/atlassian-jira/WEB-INF/classes/jira-application.properties owner={{ jira_user }} group={{ jira_user_group }} mode=0644

- name: Copy the service script
  template: src=jira.service.j2 dest=/usr/lib/systemd/system/jira.service
  when: ansible_os_family == "RedHat" and ansible_lsb.major_release|int == 7

- name: Copy the init.d script
  template: src=jira.j2 dest=/etc/init.d/jira mode=0755
  when: ansible_os_family == "RedHat" and ansible_lsb.major_release|int == 6 or ansible_os_family == "Debian"

- name: Download the Java MySQL driver
  get_url: url=http://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.34.tar.gz dest={{ jira_user_home_dir }}/mysql-connector.tar.gz

- stat: path={{ jira_user_home_dir }}/current/lib/mysql-connector-java-5.1.34-bin.jar
  register: connector

- name: Extract the Java MySQL driver
  unarchive: src={{ jira_user_home_dir }}/mysql-connector.tar.gz dest={{ jira_user_home_dir }} copy=no
  when: not connector.stat.exists

- name: Copy the Java MySQL connector into JIRA
  command: cp {{ jira_user_home_dir }}/mysql-connector-java-5.1.34/mysql-connector-java-5.1.34-bin.jar {{ jira_user_home_dir }}/current/lib/mysql-connector-java-5.1.34-bin.jar 
  when: not connector.stat.exists

- name: Change ownership of the JIRA directory
  file: path={{ jira_user_home_dir }}/current/ recurse=yes state=directory group={{ jira_user_group }} owner={{ jira_user }}

- name: Update the services on the OS
  command: update-rc.d jira defaults 
  when: ansible_os_family == "Debian"

- name: Setup MySQL root user
  mysql_user: name=root password={{ mysql_root_password }}

- name: copy .my.cnf file with root password credentials
  template: src=.my.cnf.j2 dest=~/.my.cnf mode=0600

- name: Setup the JIRA database
  mysql_db: name={{ mysql_jira_db }} state=present collation=utf8_bin encoding=utf8

- name: Setup JIRA User in MySQL
  mysql_user: name={{ mysql_jira_user }} password={{mysql_jira_password }} priv={{ mysql_jira_db }}.*:SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,ALTER,INDEX

